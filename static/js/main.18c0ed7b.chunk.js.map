{"version":3,"sources":["components/Star.js","components/Stars.js","App.js","reportWebVitals.js","index.js"],"names":["Star","fill","height","viewBox","width","xmlns","d","Stars","render","n","count","isNaN","parseFloat","isFinite","arrayCountWithIndexes","Array","from","length","x","i","map","array","id","shortid","generate","value","className","arr","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6NAWeA,EATF,WACT,OACI,sBAAKC,KAAK,UAAUC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,KAAKC,MAAM,6BAArE,UACI,sBAAMC,EAAE,4EACR,sBAAMA,EAAE,gBAAgBL,KAAK,a,gBCmC1BM,EArCD,SAAC,GAAa,IAEpBC,EAEeC,EAJPC,EAAW,EAAXA,MAIOD,EAILC,EACVF,MAJQG,MAAMC,WAAWH,KAAOI,SAASJ,IAGrBC,GAAS,GAAKA,GAAS,GAM/C,IAEMI,EAFaC,MAAMC,KAAK,CAACC,OAAQP,IAAQ,SAACQ,EAAEC,GAAH,OAASA,KAEfC,KAAI,SAACC,GAAD,MACxC,CAACC,GAAIC,IAAQC,WAAYC,MAAOJ,MAErC,OACI,mCACCb,EAEG,oBAAIkB,UAAU,6BAAd,SACKZ,EAAsBM,KAAI,SAACO,GAAD,OACvB,6BACI,cAAC,EAAD,KADKA,EAAIL,SAMrB,gCCxBGM,MARf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,EAAD,CAAOhB,MAAO,OCMLmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS9B,OACP,cAAC,IAAM+B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.18c0ed7b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Star = () => {\n    return (\n        <svg fill=\"#D3BCA2\" height=\"28\" viewBox=\"0 0 18 18\" width=\"28\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M9 11.3l3.71 2.7-1.42-4.36L15 7h-4.55L9 2.5 7.55 7H3l3.71 2.64L5.29 14z\"/>\n            <path d=\"M0 0h18v18H0z\" fill=\"none\"/>\n        </svg>\n    );\n}\n\nexport default Star;\n","import React from 'react';\nimport Star from './Star';\nimport shortid from \"shortid\";\n\nconst Stars = ({count}) => {\n\n    let render;\n\n    function isNumeric(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    if( isNumeric(count) && count >= 1 && count <= 5 ){\n        render = true\n    } else {\n        render = false\n    }\n\n    const arrayCount = Array.from({length: count}, (x,i) => i);\n\n    const arrayCountWithIndexes = arrayCount.map((array) =>\n        ({id: shortid.generate(), value: array}));\n\n    return (\n        <>\n        {render \n            ?\n            <ul className=\"card-body-stars u-clearfix\">\n                {arrayCountWithIndexes.map((arr) => \n                    <li key={arr.id}>\n                        <Star/>\n                    </li>\n                )}\n            </ul>\n            :\n            <></>\n        }\n        </>\n    );\n}\n\nexport default Stars;\n","import './App.css';\nimport Stars from './components/Stars';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stars count={5} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}